// <auto-generated />
using DotNetJobSeek.Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DotNetJobSeek.Infrastructure.EF.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20180220052121_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("DotNetJobSeek.Domain.Keyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("DotNetJobSeek.Domain.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Version");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("DotNetJobSeek.Domain.TagKeyword", b =>
                {
                    b.Property<int>("TagId");

                    b.Property<int>("KeywordId");

                    b.Property<int>("Weight")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.HasKey("TagId", "KeywordId");

                    b.HasIndex("KeywordId");

                    b.HasIndex("Weight");

                    b.ToTable("TagKeyword");
                });

            modelBuilder.Entity("DotNetJobSeek.Domain.TagKeyword", b =>
                {
                    b.HasOne("DotNetJobSeek.Domain.Keyword", "Keyword")
                        .WithMany("TagKeywords")
                        .HasForeignKey("KeywordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DotNetJobSeek.Domain.Tag", "Tag")
                        .WithMany("TagKeywords")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
